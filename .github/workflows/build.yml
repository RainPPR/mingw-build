name: Build

on:
  workflow_dispatch:
    inputs:
      release_tag:
        required: false
        type: string

permissions:
  contents: write
  discussions: write

jobs:
  build:
    name: Build (${{ matrix.config.name }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            msystem: "UCRT64",
            msys2_environment: "mingw-w64-ucrt-x86_64",
            msys2_path: "ucrt64"
          }
          - {
            msystem: "CLANG64",
            msys2_environment: "mingw-w64-clang-x86_64",
            msys2_path: "clang64"
          }
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.config.msystem }}
          update: true
          release: true
          cache: true
          location: D:\
          install: ${{ matrix.config.msys2_environment }}-gcc ${{ matrix.config.msys2_environment }}-boost ${{ matrix.config.msys2_environment }}-cmake ${{ matrix.config.msys2_environment }}-clang ${{ matrix.config.msys2_environment }}-llvm ${{ matrix.config.msys2_environment }}-lld ${{ matrix.config.msys2_environment }}-lldb ${{ matrix.config.msys2_environment }}-cninja ${{ matrix.config.msys2_environment }}-cppcheck ${{ matrix.config.msys2_environment }}-gdb ${{ matrix.config.msys2_environment }}-iconv ${{ matrix.config.msys2_environment }}-make ${{ matrix.config.msys2_environment }}-nodejs ${{ matrix.config.msys2_environment }}-make ${{ matrix.config.msys2_environment }}-yasm ${{ matrix.config.msys2_environment }}-nasm ${{ matrix.config.msys2_environment }}-ccache ${{ matrix.config.msys2_environment }}-doxygen ${{ matrix.config.msys2_environment }}-ctags
      - name: Setup stdc++.h for libc++ 
        shell: cmd
        if: contains(matrix.config.msystem, 'CLANG64')
        run: |
          mkdir D:\msys64\clang64\include\c++\v1\bits
          move stdc++.h D:\msys64\clang64\include\c++\v1\bits
      - name: Compress Archive
        shell: cmd
        run: |
          7z a "${{ matrix.config.msys2_environment }}-gcc.zip" "D:\msys64\${{ matrix.config.msys2_path }}"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.msys2_path }}
          path: ${{ matrix.config.msys2_environment }}-gcc.zip

  release:
    if: github.event.inputs.release_tag != ''
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
    - name: Artifacts List
      run: ls -R
    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: "*.zip"
        tag_name: ${{ github.event.inputs.release_tag }}